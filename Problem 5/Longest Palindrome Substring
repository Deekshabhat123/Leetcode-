class Solution:
    def longestPalindrome(self, s: str) -> str:
        def expand_around_center(left: int, right: int) -> str:
            while left >= 0 and right < len(s) and s[left] == s[right]:
                left -= 1
                right += 1
            return s[left + 1:right]

        max_len = 0
        max_str = ''
        for i in range(len(s)):
            # Check for odd-length palindromes
            palindrome = expand_around_center(i, i)
            if len(palindrome) > max_len:
                max_len = len(palindrome)
                max_str = palindrome
            
            # Check for even-length palindromes
            palindrome = expand_around_center(i, i + 1)
            if len(palindrome) > max_len:
                max_len = len(palindrome)
                max_str = palindrome

        return max_str
